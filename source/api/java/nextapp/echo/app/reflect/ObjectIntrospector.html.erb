<div>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../nextapp/echo/app/reflect/IntrospectorFactory.html" title="class in nextapp.echo.app.reflect"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?nextapp/echo/app/reflect/ObjectIntrospector.html" target="_top">Frames</a></li>
<li><a href="ObjectIntrospector.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">nextapp.echo.app.reflect</div>
<h2 title="Class ObjectIntrospector" class="title">Class ObjectIntrospector</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>nextapp.echo.app.reflect.ObjectIntrospector</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../../nextapp/echo/app/reflect/ComponentIntrospector.html" title="class in nextapp.echo.app.reflect">ComponentIntrospector</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">ObjectIntrospector</span>
extends java.lang.Object</pre>
<div class="block">Provides introspection/reflection capabilities for components, properties, 
 and layout data objects.  Wraps Java beans and reflection APIs.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#PUBLIC_CONSTANT_MODIFERS">PUBLIC_CONSTANT_MODIFERS</a></strong></code>
<div class="block">Modifier requirements for style constant name fields.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier</th>
<th class="colLast" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected </code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#ObjectIntrospector(java.lang.String, java.lang.ClassLoader)">ObjectIntrospector</a></strong>(java.lang.String&nbsp;typeName,
                  java.lang.ClassLoader&nbsp;classLoader)</code>
<div class="block">Creates a new <code>ObjectIntrospector</code> for the specified
 type.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Set</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getConstantNames()">getConstantNames</a></strong>()</code>
<div class="block">Returns the constant names of the object.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getConstantValue(java.lang.String)">getConstantValue</a></strong>(java.lang.String&nbsp;constantName)</code>
<div class="block">Retrieves the value of the constant with the specified name.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Set</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getEventHandlerNames(java.lang.String)">getEventHandlerNames</a></strong>(java.lang.String&nbsp;eventSetName)</code>
<div class="block">Returns event handler names for a given event set.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.beans.EventSetDescriptor</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getEventSetDescriptor(java.lang.String)">getEventSetDescriptor</a></strong>(java.lang.String&nbsp;eventSetName)</code>
<div class="block">Returns the <code>EventSetDescriptor</code> for the specified event set.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Set</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getEventSetNames()">getEventSetNames</a></strong>()</code>
<div class="block">Returns the event set names of the object.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Class</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getObjectClass()">getObjectClass</a></strong>()</code>
<div class="block">Returns the <code>Class</code> of the object being introspected.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Class</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getPropertyClass(java.lang.String)">getPropertyClass</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns the <code>Class</code> of a specific property.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getPropertyCount()">getPropertyCount</a></strong>()</code>
<div class="block">Returns the number of mutable properties provided by the introspected
 <code>Object</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getPropertyDefinitionConcreteType(java.lang.String)">getPropertyDefinitionConcreteType</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns the name of the type that defines the specified property.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getPropertyDefinitionType(java.lang.String)">getPropertyDefinitionType</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns the name of the type that defines the specified property.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.beans.PropertyDescriptor</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getPropertyDescriptor(java.lang.String)">getPropertyDescriptor</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns the <code>PropertyDescriptor</code> for the specified property.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Iterator</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getPropertyNames()">getPropertyNames</a></strong>()</code>
<div class="block">Returns an <code>Iterator</code> over the property names of the object.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.reflect.Method</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#getWriteMethod(java.lang.String)">getWriteMethod</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns a write (setter) method for a specific property.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#isIndexedProperty(java.lang.String)">isIndexedProperty</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Determines whether a property is an indexed property.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/ObjectIntrospector.html#setProperty(java.lang.Object, java.lang.String, int, java.lang.Object)">setProperty</a></strong>(java.lang.Object&nbsp;object,
           java.lang.String&nbsp;propertyName,
           int&nbsp;index,
           java.lang.Object&nbsp;propertyValue)</code>
<div class="block">Sets a property on an object instance.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="PUBLIC_CONSTANT_MODIFERS">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>PUBLIC_CONSTANT_MODIFERS</h4>
<pre>public static final&nbsp;int PUBLIC_CONSTANT_MODIFERS</pre>
<div class="block">Modifier requirements for style constant name fields.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../constant-values.html#nextapp.echo.app.reflect.ObjectIntrospector.PUBLIC_CONSTANT_MODIFERS">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ObjectIntrospector(java.lang.String, java.lang.ClassLoader)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ObjectIntrospector</h4>
<pre>protected&nbsp;ObjectIntrospector(java.lang.String&nbsp;typeName,
                  java.lang.ClassLoader&nbsp;classLoader)
                      throws java.lang.ClassNotFoundException</pre>
<div class="block">Creates a new <code>ObjectIntrospector</code> for the specified
 type.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>typeName</code> - the object type name</dd><dd><code>classLoader</code> - the <code>ClassLoader</code> to use for introspection</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ClassNotFoundException</code></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getConstantNames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getConstantNames</h4>
<pre>public&nbsp;java.util.Set&nbsp;getConstantNames()</pre>
<div class="block">Returns the constant names of the object.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>a <code>Set</code> containing the constant names of the object</dd></dl>
</li>
</ul>
<a name="getConstantValue(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getConstantValue</h4>
<pre>public&nbsp;java.lang.Object&nbsp;getConstantValue(java.lang.String&nbsp;constantName)</pre>
<div class="block">Retrieves the value of the constant with the specified name.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>constantName</code> - the name of the constant (unqualified)</dd>
<dt><span class="strong">Returns:</span></dt><dd>the constant value, or null if no such constant exists</dd></dl>
</li>
</ul>
<a name="getEventHandlerNames(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEventHandlerNames</h4>
<pre>public&nbsp;java.util.Set&nbsp;getEventHandlerNames(java.lang.String&nbsp;eventSetName)</pre>
<div class="block">Returns event handler names for a given event set.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>eventSetName</code> - the name of the event set, e.g., 
        'nextapp.echo.app.event.Action' for <code>ActionEvent</code>s</dd>
<dt><span class="strong">Returns:</span></dt><dd>a <code>Set</code> containing the names of event listener 
         methods</dd></dl>
</li>
</ul>
<a name="getEventSetDescriptor(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEventSetDescriptor</h4>
<pre>public&nbsp;java.beans.EventSetDescriptor&nbsp;getEventSetDescriptor(java.lang.String&nbsp;eventSetName)</pre>
<div class="block">Returns the <code>EventSetDescriptor</code> for the specified event set.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>eventSetName</code> - The name of the event set.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the <code>EventSetDescriptor</code> associated with the event set</dd></dl>
</li>
</ul>
<a name="getEventSetNames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEventSetNames</h4>
<pre>public&nbsp;java.util.Set&nbsp;getEventSetNames()</pre>
<div class="block">Returns the event set names of the object.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>a <code>Set</code> containing the event set names of the object</dd></dl>
</li>
</ul>
<a name="getObjectClass()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getObjectClass</h4>
<pre>public&nbsp;java.lang.Class&nbsp;getObjectClass()</pre>
<div class="block">Returns the <code>Class</code> of the object being introspected.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the object <code>Class</code></dd></dl>
</li>
</ul>
<a name="getPropertyClass(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPropertyClass</h4>
<pre>public&nbsp;java.lang.Class&nbsp;getPropertyClass(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns the <code>Class</code> of a specific property.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the name of the property</dd>
<dt><span class="strong">Returns:</span></dt><dd>the <code>Class</code> of the property</dd></dl>
</li>
</ul>
<a name="getPropertyCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPropertyCount</h4>
<pre>public&nbsp;int&nbsp;getPropertyCount()</pre>
<div class="block">Returns the number of mutable properties provided by the introspected
 <code>Object</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of mutable properties</dd></dl>
</li>
</ul>
<a name="getPropertyDefinitionConcreteType(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPropertyDefinitionConcreteType</h4>
<pre>public&nbsp;java.lang.String&nbsp;getPropertyDefinitionConcreteType(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns the name of the type that defines the specified property.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the name of the property</dd>
<dt><span class="strong">Returns:</span></dt><dd>the defining class</dd></dl>
</li>
</ul>
<a name="getPropertyDefinitionType(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPropertyDefinitionType</h4>
<pre>public&nbsp;java.lang.String&nbsp;getPropertyDefinitionType(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns the name of the type that defines the specified property.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the name of the property</dd>
<dt><span class="strong">Returns:</span></dt><dd>the defining class</dd></dl>
</li>
</ul>
<a name="getPropertyDescriptor(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPropertyDescriptor</h4>
<pre>public&nbsp;java.beans.PropertyDescriptor&nbsp;getPropertyDescriptor(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns the <code>PropertyDescriptor</code> for the specified property.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - The name of the property.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the <code>PropertyDescriptor</code> associated with the property</dd></dl>
</li>
</ul>
<a name="getPropertyNames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPropertyNames</h4>
<pre>public&nbsp;java.util.Iterator&nbsp;getPropertyNames()</pre>
<div class="block">Returns an <code>Iterator</code> over the property names of the object.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>an <code>Iterator</code> over the property names of the object</dd></dl>
</li>
</ul>
<a name="getWriteMethod(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWriteMethod</h4>
<pre>public&nbsp;java.lang.reflect.Method&nbsp;getWriteMethod(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns a write (setter) method for a specific property.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the name of the property</dd>
<dt><span class="strong">Returns:</span></dt><dd>the write method (if available)</dd></dl>
</li>
</ul>
<a name="isIndexedProperty(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isIndexedProperty</h4>
<pre>public&nbsp;boolean&nbsp;isIndexedProperty(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Determines whether a property is an indexed property.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the name of the property to query</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if the specified property is indexed</dd></dl>
</li>
</ul>
<a name="setProperty(java.lang.Object, java.lang.String, int, java.lang.Object)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setProperty</h4>
<pre>public&nbsp;void&nbsp;setProperty(java.lang.Object&nbsp;object,
               java.lang.String&nbsp;propertyName,
               int&nbsp;index,
               java.lang.Object&nbsp;propertyValue)
                 throws java.lang.IllegalArgumentException,
                        java.lang.IllegalAccessException,
                        java.lang.reflect.InvocationTargetException</pre>
<div class="block">Sets a property on an object instance.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>object</code> - the object to modify</dd><dd><code>propertyName</code> - the property name to be set</dd><dd><code>propertyValue</code> - the new property value</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code></dd>
<dd><code>java.lang.IllegalAccessException</code></dd>
<dd><code>java.lang.reflect.InvocationTargetException</code></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../nextapp/echo/app/reflect/IntrospectorFactory.html" title="class in nextapp.echo.app.reflect"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?nextapp/echo/app/reflect/ObjectIntrospector.html" target="_top">Frames</a></li>
<li><a href="ObjectIntrospector.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</div>
