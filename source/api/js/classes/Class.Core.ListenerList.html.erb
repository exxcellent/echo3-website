
<ul class="breadcrumb">
    <li>
    Core <span class="divider">/</span>
  </li>
    <li>
    ListenerList
  </li>
</ul>


<dl>
<dt><strong>Class Hierarchy:</strong></dt>
<dd>
<ul style="padding-left: 0px">
<li style="margin-left: 0px">Object</li>
<li style="margin-left: 15px">
<code><a href="Class.Core.ListenerList">Core.ListenerList</a></code>
</li>
</ul>
</dd>
</dl>




<p>A collection of event listeners.  Provides capability to manage listeners
of multiple types, and fire events to listeners based on type.</p>





<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Constructor Summary</th>
</tr>
<tr>
<td>
Public
</td>
<td><code><a href="#Constructor">Core.ListenerList()</a></code><br/>
Creates a new listener list.
</td>
</tr>
</table>
<br/>






<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Instance Field Summary</th>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._data">_data</a></code><br/>
Array containing event types and event listeners.
</td>
</tr>
</table>
<br/>


<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Instance Method Summary</th>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.addListener">addListener(eventType, eventTarget)</a></code><br/>
Adds an event listener.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.fireEvent">fireEvent(event)</a></code><br/>
Fires an event.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.getListenerTypes">getListenerTypes()</a></code><br/>
Returns an array containing the types of all listeners
in the list.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.getListeners">getListeners(eventType)</a></code><br/>
Returns an array of all listeners for a specific event type.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.getListenerCount">getListenerCount(eventType)</a></code><br/>
Determines the number of listeners for a specific event type.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.hasListeners">hasListeners(eventType)</a></code><br/>
Determines if the listeners list has any listeners of a specific type.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.isEmpty">isEmpty()</a></code><br/>
Determines if any number of listeners are registered to the list.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.removeListener">removeListener(eventType, eventTarget)</a></code><br/>
Removes an event listener.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.toString">toString()</a></code><br/>

</td>
</tr>
</table>
<br/>







<a name="Constructor"></a>

<div class="Header">Constructor Detail</div>

<span class="DetailPropertyName">Core.ListenerList()</span>

<dl>
<dd>Creates a new listener list.

</dd>
</dl>
<hr/>





<div class="Header">Instance Method Detail</div>

<a name="Method.addListener"></a>
<span class="DetailPropertyName">addListener</span>

<dl>
<dd>Adds an event listener.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>eventType</code> 
<em>(String)</em>
- the event type</dd>
<dd>
<code>eventTarget</code> 
<em>(Function)</em>
- the event target</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.fireEvent"></a>
<span class="DetailPropertyName">fireEvent</span>

<dl>
<dd>Fires an event.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>event</code> 
- the event to fire</dd>
</dl>

<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Boolean)</em>

true if all event listeners returned values that evaluate to true, 
        or false if any event listeners returned values that evaluate to 
        false
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.getListenerTypes"></a>
<span class="DetailPropertyName">getListenerTypes</span>

<dl>
<dd>Returns an array containing the types of all listeners
in the list.


<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Array)</em>

the event types
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.getListeners"></a>
<span class="DetailPropertyName">getListeners</span>

<dl>
<dd>Returns an array of all listeners for a specific event type.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>eventType</code> 
<em>(String)</em>
- the event type</dd>
</dl>

<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Array)</em>

the listeners
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.getListenerCount"></a>
<span class="DetailPropertyName">getListenerCount</span>

<dl>
<dd>Determines the number of listeners for a specific event type.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>eventType</code> 
<em>(String)</em>
- the event type</dd>
</dl>

<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Number)</em>

the listener count
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.hasListeners"></a>
<span class="DetailPropertyName">hasListeners</span>

<dl>
<dd>Determines if the listeners list has any listeners of a specific type.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>eventType</code> 
<em>(String)</em>
- the event type</dd>
</dl>

<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Boolean)</em>

true if any listeners exist
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.isEmpty"></a>
<span class="DetailPropertyName">isEmpty</span>

<dl>
<dd>Determines if any number of listeners are registered to the list.


<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Boolean)</em>

true if the listener list is empty
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.removeListener"></a>
<span class="DetailPropertyName">removeListener</span>

<dl>
<dd>Removes an event listener.

CAUTION: If you are unregistering an event listener created with Core.method(), please see the documentation for
Core.method() and note that a new closure-wrapped method is returned each time Core.method() is invoked.
Thus calling removeListener(Core.method(this, this,_someListener)) will NOT remove an existing listener.
The solution to this issue is to retain a reference to Core.method() wrapped listeners within the object
that will register and unregister them.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>eventType</code> 
<em>(String)</em>
- the event type</dd>
<dd>
<code>eventTarget</code> 
<em>(Function)</em>
- the event target</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.toString"></a>
<span class="DetailPropertyName">toString</span>

<dl>
<dd>



</dd>
</dl>
<hr/>


