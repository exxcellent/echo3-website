<div>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../nextapp/echo/webcontainer/SynchronizePeerFactory.html" title="class in nextapp.echo.webcontainer"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../nextapp/echo/webcontainer/UserInstanceContainer.html" title="class in nextapp.echo.webcontainer"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?nextapp/echo/webcontainer/UserInstance.html" target="_top">Frames</a></li>
<li><a href="UserInstance.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">nextapp.echo.webcontainer</div>
<h2 title="Class UserInstance" class="title">Class UserInstance</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>nextapp.echo.webcontainer.UserInstance</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">UserInstance</span>
extends java.lang.Object
implements java.io.Serializable</pre>
<div class="block">Object representing a single user-instance of an application hosted in the 
 web application container.  This object is stored in the HttpSession.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../serialized-form.html#nextapp.echo.webcontainer.UserInstance">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#PROPERTY_CLIENT_CONFIGURATION">PROPERTY_CLIENT_CONFIGURATION</a></strong></code>
<div class="block">Client configuration data property name.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#UserInstance(nextapp.echo.webcontainer.UserInstanceContainer, java.lang.String, java.lang.String, java.util.Map)">UserInstance</a></strong>(<a href="../../../nextapp/echo/webcontainer/UserInstanceContainer.html" title="class in nextapp.echo.webcontainer">UserInstanceContainer</a>&nbsp;container,
            java.lang.String&nbsp;id,
            java.lang.String&nbsp;clientWindowId,
            java.util.Map&nbsp;initialRequestParameterMap)</code>
<div class="block">Creates a new <code>UserInstance</code>.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#clearRenderStates()">clearRenderStates</a></strong>()</code>
<div class="block">Clears all <code>RenderState</code> information.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#dispose()">dispose</a></strong>()</code>
<div class="block">Disposes of the <code>UserInstance</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/app/ApplicationInstance.html" title="class in nextapp.echo.app">ApplicationInstance</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getApplicationInstance()">getApplicationInstance</a></strong>()</code>
<div class="block">Returns the corresponding <code>ApplicationInstance</code>
 for this user instance.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/webcontainer/ApplicationWebSocket.html" title="class in nextapp.echo.webcontainer">ApplicationWebSocket</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getApplicationWebSocket()">getApplicationWebSocket</a></strong>()</code>
<div class="block">Returns the corresponding <code>ApplicationWebSocket</code>
 for this user instance.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getCallbackInterval()">getCallbackInterval</a></strong>()</code>
<div class="block">Determines the application-specified asynchronous monitoring
 service callback interval.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getCharacterEncoding()">getCharacterEncoding</a></strong>()</code>
<div class="block">Returns the default character encoding in which responses should be
 rendered.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/webcontainer/ClientConfiguration.html" title="class in nextapp.echo.webcontainer">ClientConfiguration</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getClientConfiguration()">getClientConfiguration</a></strong>()</code>
<div class="block">The <code>ServerDelayMessage</code> displayed during client/server-interactions.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/webcontainer/ClientProperties.html" title="class in nextapp.echo.webcontainer">ClientProperties</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getClientProperties()">getClientProperties</a></strong>()</code>
<div class="block">Retrieves the <code>ClientProperties</code> object providing
 information about the client of this instance.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getClientRenderId(nextapp.echo.app.Component)">getClientRenderId</a></strong>(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</code>
<div class="block">Returns the client-side render id that should be used when rendering the
 specified <code>Component</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getClientRenderId(java.lang.String)">getClientRenderId</a></strong>(java.lang.String&nbsp;componentRenderId)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getClientWindowId()">getClientWindowId</a></strong>()</code>
<div class="block">Returns the client-side generated unique browser window id displaying this <code>UserInstance</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getComponentByClientRenderId(java.lang.String)">getComponentByClientRenderId</a></strong>(java.lang.String&nbsp;clientRenderId)</code>
<div class="block">Retrieves the <code>Component</code> with the specified client-side render id.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getCurrentTransactionId()">getCurrentTransactionId</a></strong>()</code>
<div class="block">Returns the current transaction id.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getId()">getId</a></strong>()</code>
<div class="block">Returns the <code>UserInstance</code> unique identifier.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>nextapp.echo.webcontainer.util.IdTable</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getIdTable()">getIdTable</a></strong>()</code>
<div class="block">Retrieves the <code>IdTable</code> used by this 
 <code>ContainerInstance</code> to assign weakly-referenced unique 
 identifiers to arbitrary objects.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Map</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getInitialRequestParameterMap()">getInitialRequestParameterMap</a></strong>()</code>
<div class="block">Returns an immutable <code>Map</code> containing the HTTP form 
 parameters sent on the initial request to the application.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getNextTransactionId()">getNextTransactionId</a></strong>()</code>
<div class="block">Increments the current transaction id and returns it.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/webcontainer/RenderState.html" title="interface in nextapp.echo.webcontainer">RenderState</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getRenderState(nextapp.echo.app.Component)">getRenderState</a></strong>(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</code>
<div class="block">Retrieves the <code>RenderState</code> of the specified
 <code>Component</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getRootHtmlElementId()">getRootHtmlElementId</a></strong>()</code>
<div class="block">Returns the id of the HTML element that will serve as the Root component.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getServiceUri(nextapp.echo.webcontainer.Service)">getServiceUri</a></strong>(<a href="../../../nextapp/echo/webcontainer/Service.html" title="interface in nextapp.echo.webcontainer">Service</a>&nbsp;service)</code>
<div class="block">Determines the URI to invoke the specified <code>Service</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getServiceUri(nextapp.echo.webcontainer.Service, java.lang.String[], java.lang.String[])">getServiceUri</a></strong>(<a href="../../../nextapp/echo/webcontainer/Service.html" title="interface in nextapp.echo.webcontainer">Service</a>&nbsp;service,
             java.lang.String[]&nbsp;parameterNames,
             java.lang.String[]&nbsp;parameterValues)</code>
<div class="block">Determines the URI to invoke the specified <code>Service</code> with
 additional request parameters.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getServletUri()">getServletUri</a></strong>()</code>
<div class="block">Returns the URI of the servlet managing this <code>UserInstance</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>javax.servlet.http.HttpSession</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getSession()">getSession</a></strong>()</code>
<div class="block">Returns the <code>HttpSession</code> containing this
 <code>UserInstance</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../nextapp/echo/app/update/UpdateManager.html" title="class in nextapp.echo.app.update">UpdateManager</a></code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getUpdateManager()">getUpdateManager</a></strong>()</code>
<div class="block">Convenience method to retrieve the application's 
 <code>UpdateManager</code>, which is used to synchronize
 client and server states.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#initHTTP(nextapp.echo.webcontainer.Connection)">initHTTP</a></strong>(<a href="../../../nextapp/echo/webcontainer/Connection.html" title="class in nextapp.echo.webcontainer">Connection</a>&nbsp;conn)</code>
<div class="block">Initializes the <code>UserInstance</code>, creating an instance
 of the target <code>ApplicationInstance</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#initWebSocket(nextapp.echo.webcontainer.WebSocketConnection)">initWebSocket</a></strong>(<a href="../../../nextapp/echo/webcontainer/WebSocketConnection.html" title="class in nextapp.echo.webcontainer">WebSocketConnection</a>&nbsp;conn)</code>
<div class="block">Associates a <code>WebSocketConnection</code> to the UserInstance.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#isInitialized()">isInitialized</a></strong>()</code>
<div class="block">Determines if the <code>UserInstance</code> has been initialized, 
 i.e., whether its <code>init()</code> method has been invoked.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#purgeRenderStates()">purgeRenderStates</a></strong>()</code>
<div class="block">Removes all <code>RenderState</code>s whose components are not
 registered.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#removeRenderState(nextapp.echo.app.Component)">removeRenderState</a></strong>(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</code>
<div class="block">Removes the <code>RenderState</code> of the specified
 <code>Component</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#setClientConfiguration(nextapp.echo.webcontainer.ClientConfiguration)">setClientConfiguration</a></strong>(<a href="../../../nextapp/echo/webcontainer/ClientConfiguration.html" title="class in nextapp.echo.webcontainer">ClientConfiguration</a>&nbsp;clientConfiguration)</code>
<div class="block">Sets the <code>ClientConfiguration</code> information containing
 application-specific client behavior settings.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#setRenderState(nextapp.echo.app.Component, nextapp.echo.webcontainer.RenderState)">setRenderState</a></strong>(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
              <a href="../../../nextapp/echo/webcontainer/RenderState.html" title="interface in nextapp.echo.webcontainer">RenderState</a>&nbsp;renderState)</code>
<div class="block">Sets the <code>RenderState</code> of the specified 
 <code>Component</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#setTaskQueueCallbackInterval(nextapp.echo.app.TaskQueueHandle, int)">setTaskQueueCallbackInterval</a></strong>(<a href="../../../nextapp/echo/app/TaskQueueHandle.html" title="interface in nextapp.echo.app">TaskQueueHandle</a>&nbsp;taskQueue,
                            int&nbsp;ms)</code>
<div class="block">Sets the interval between asynchronous callbacks from the client to check
 for queued tasks for a given <code>TaskQueue</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/UserInstance.html#toString()">toString</a></strong>()</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="PROPERTY_CLIENT_CONFIGURATION">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>PROPERTY_CLIENT_CONFIGURATION</h4>
<pre>public static final&nbsp;java.lang.String PROPERTY_CLIENT_CONFIGURATION</pre>
<div class="block">Client configuration data property name.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#nextapp.echo.webcontainer.UserInstance.PROPERTY_CLIENT_CONFIGURATION">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="UserInstance(nextapp.echo.webcontainer.UserInstanceContainer, java.lang.String, java.lang.String, java.util.Map)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>UserInstance</h4>
<pre>public&nbsp;UserInstance(<a href="../../../nextapp/echo/webcontainer/UserInstanceContainer.html" title="class in nextapp.echo.webcontainer">UserInstanceContainer</a>&nbsp;container,
            java.lang.String&nbsp;id,
            java.lang.String&nbsp;clientWindowId,
            java.util.Map&nbsp;initialRequestParameterMap)</pre>
<div class="block">Creates a new <code>UserInstance</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>container</code> - the <code>UserInstanceContainer</code></dd><dd><code>id</code> - the unique user instance identifier, generated by the <code>UserInstanceContainer</code></dd><dd><code>clientWindowId</code> - the client-side generated unique browser window id displaying this <code>UserInstance</code></dd><dd><code>initialRequestParameterMap</code> - map containing parameters of the initial HTTP request</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="clearRenderStates()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearRenderStates</h4>
<pre>public&nbsp;void&nbsp;clearRenderStates()</pre>
<div class="block">Clears all <code>RenderState</code> information.</div>
</li>
</ul>
<a name="getApplicationInstance()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getApplicationInstance</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/app/ApplicationInstance.html" title="class in nextapp.echo.app">ApplicationInstance</a>&nbsp;getApplicationInstance()</pre>
<div class="block">Returns the corresponding <code>ApplicationInstance</code>
 for this user instance.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the relevant <code>ApplicationInstance</code></dd></dl>
</li>
</ul>
<a name="getApplicationWebSocket()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getApplicationWebSocket</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/webcontainer/ApplicationWebSocket.html" title="class in nextapp.echo.webcontainer">ApplicationWebSocket</a>&nbsp;getApplicationWebSocket()</pre>
<div class="block">Returns the corresponding <code>ApplicationWebSocket</code>
 for this user instance.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the relevant <code>ApplicationWebSocket</code></dd></dl>
</li>
</ul>
<a name="getCallbackInterval()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCallbackInterval</h4>
<pre>public&nbsp;int&nbsp;getCallbackInterval()</pre>
<div class="block">Determines the application-specified asynchronous monitoring
 service callback interval.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the callback interval, in milliseconds</dd></dl>
</li>
</ul>
<a name="getCharacterEncoding()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCharacterEncoding</h4>
<pre>public&nbsp;java.lang.String&nbsp;getCharacterEncoding()</pre>
<div class="block">Returns the default character encoding in which responses should be
 rendered.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the default character encoding in which responses should be
         rendered</dd></dl>
</li>
</ul>
<a name="getClientConfiguration()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getClientConfiguration</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/webcontainer/ClientConfiguration.html" title="class in nextapp.echo.webcontainer">ClientConfiguration</a>&nbsp;getClientConfiguration()</pre>
<div class="block">The <code>ServerDelayMessage</code> displayed during client/server-interactions.
 Retrieves the <code>ClientConfiguration</code> information containing application-specific client behavior settings.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the relevant <code>ClientProperties</code></dd></dl>
</li>
</ul>
<a name="getClientProperties()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getClientProperties</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/webcontainer/ClientProperties.html" title="class in nextapp.echo.webcontainer">ClientProperties</a>&nbsp;getClientProperties()</pre>
<div class="block">Retrieves the <code>ClientProperties</code> object providing
 information about the client of this instance.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the relevant <code>ClientProperties</code></dd></dl>
</li>
</ul>
<a name="getClientRenderId(nextapp.echo.app.Component)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getClientRenderId</h4>
<pre>public&nbsp;java.lang.String&nbsp;getClientRenderId(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</pre>
<div class="block">Returns the client-side render id that should be used when rendering the
 specified <code>Component</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>component</code> - the component</dd>
<dt><span class="strong">Returns:</span></dt><dd>the client-side render id</dd></dl>
</li>
</ul>
<a name="getClientRenderId(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getClientRenderId</h4>
<pre>public&nbsp;java.lang.String&nbsp;getClientRenderId(java.lang.String&nbsp;componentRenderId)</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>componentRenderId</code> - component render id</dd>
<dt><span class="strong">Returns:</span></dt><dd>the client-side render id</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/UserInstance.html#getClientRenderId(nextapp.echo.app.Component)"><code>getClientRenderId(nextapp.echo.app.Component)</code></a></dd></dl>
</li>
</ul>
<a name="getComponentByClientRenderId(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getComponentByClientRenderId</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;getComponentByClientRenderId(java.lang.String&nbsp;clientRenderId)</pre>
<div class="block">Retrieves the <code>Component</code> with the specified client-side render id.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>clientRenderId</code> - client-side element render id, e.g., "C.42323"</dd>
<dt><span class="strong">Returns:</span></dt><dd>the component (e.g., the component whose id is "42323")</dd></dl>
</li>
</ul>
<a name="getCurrentTransactionId()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCurrentTransactionId</h4>
<pre>public&nbsp;int&nbsp;getCurrentTransactionId()</pre>
<div class="block">Returns the current transaction id.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the current transaction id</dd></dl>
</li>
</ul>
<a name="getId()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getId</h4>
<pre>public&nbsp;java.lang.String&nbsp;getId()</pre>
<div class="block">Returns the <code>UserInstance</code> unique identifier.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the identifier value</dd></dl>
</li>
</ul>
<a name="getClientWindowId()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getClientWindowId</h4>
<pre>public&nbsp;java.lang.String&nbsp;getClientWindowId()</pre>
<div class="block">Returns the client-side generated unique browser window id displaying this <code>UserInstance</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the client-side window id</dd></dl>
</li>
</ul>
<a name="getIdTable()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIdTable</h4>
<pre>public&nbsp;nextapp.echo.webcontainer.util.IdTable&nbsp;getIdTable()</pre>
<div class="block">Retrieves the <code>IdTable</code> used by this 
 <code>ContainerInstance</code> to assign weakly-referenced unique 
 identifiers to arbitrary objects.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the <code>IdTable</code></dd></dl>
</li>
</ul>
<a name="getInitialRequestParameterMap()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getInitialRequestParameterMap</h4>
<pre>public&nbsp;java.util.Map&nbsp;getInitialRequestParameterMap()</pre>
<div class="block">Returns an immutable <code>Map</code> containing the HTTP form 
 parameters sent on the initial request to the application.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the initial request parameter map</dd></dl>
</li>
</ul>
<a name="getNextTransactionId()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNextTransactionId</h4>
<pre>public&nbsp;int&nbsp;getNextTransactionId()</pre>
<div class="block">Increments the current transaction id and returns it.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the current transaction id, after an increment</dd></dl>
</li>
</ul>
<a name="getRenderState(nextapp.echo.app.Component)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRenderState</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/webcontainer/RenderState.html" title="interface in nextapp.echo.webcontainer">RenderState</a>&nbsp;getRenderState(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</pre>
<div class="block">Retrieves the <code>RenderState</code> of the specified
 <code>Component</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>component</code> - the component</dd>
<dt><span class="strong">Returns:</span></dt><dd>the rendering state</dd></dl>
</li>
</ul>
<a name="getRootHtmlElementId()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRootHtmlElementId</h4>
<pre>public&nbsp;java.lang.String&nbsp;getRootHtmlElementId()</pre>
<div class="block">Returns the id of the HTML element that will serve as the Root component.
 This element must already be present in the DOM when the application is
 first rendered.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the element id</dd></dl>
</li>
</ul>
<a name="getServiceUri(nextapp.echo.webcontainer.Service)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getServiceUri</h4>
<pre>public&nbsp;java.lang.String&nbsp;getServiceUri(<a href="../../../nextapp/echo/webcontainer/Service.html" title="interface in nextapp.echo.webcontainer">Service</a>&nbsp;service)</pre>
<div class="block">Determines the URI to invoke the specified <code>Service</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>service</code> - the <code>Service</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>the URI</dd></dl>
</li>
</ul>
<a name="getServiceUri(nextapp.echo.webcontainer.Service, java.lang.String[], java.lang.String[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getServiceUri</h4>
<pre>public&nbsp;java.lang.String&nbsp;getServiceUri(<a href="../../../nextapp/echo/webcontainer/Service.html" title="interface in nextapp.echo.webcontainer">Service</a>&nbsp;service,
                             java.lang.String[]&nbsp;parameterNames,
                             java.lang.String[]&nbsp;parameterValues)</pre>
<div class="block">Determines the URI to invoke the specified <code>Service</code> with
 additional request parameters. The additional parameters are provided by
 way of the <code>parameterNames</code> and <code>parameterValues</code>
 arrays. The value of a parameter at a specific index in the
 <code>parameterNames</code> array is provided in the
 <code>parameterValues</code> array at the same index. The arrays must
 thus be of equal length. Null values are allowed in the
 <code>parameterValues</code> array, and in such cases only the parameter
 name will be rendered in the returned URI.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>service</code> - the <code>Service</code></dd><dd><code>parameterNames</code> - the names of the additional URI parameters</dd><dd><code>parameterValues</code> - the values of the additional URI parameters</dd>
<dt><span class="strong">Returns:</span></dt><dd>the URI</dd></dl>
</li>
</ul>
<a name="getServletUri()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getServletUri</h4>
<pre>public&nbsp;java.lang.String&nbsp;getServletUri()</pre>
<div class="block">Returns the URI of the servlet managing this <code>UserInstance</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the URI</dd></dl>
</li>
</ul>
<a name="getSession()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSession</h4>
<pre>public&nbsp;javax.servlet.http.HttpSession&nbsp;getSession()</pre>
<div class="block">Returns the <code>HttpSession</code> containing this
 <code>UserInstance</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the <code>HttpSession</code></dd></dl>
</li>
</ul>
<a name="getUpdateManager()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpdateManager</h4>
<pre>public&nbsp;<a href="../../../nextapp/echo/app/update/UpdateManager.html" title="class in nextapp.echo.app.update">UpdateManager</a>&nbsp;getUpdateManager()</pre>
<div class="block">Convenience method to retrieve the application's 
 <code>UpdateManager</code>, which is used to synchronize
 client and server states.
 This method is equivalent to invoking
 <code>getApplicationInstance().getUpdateManager()</code>.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the <code>UpdateManager</code></dd></dl>
</li>
</ul>
<a name="dispose()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dispose</h4>
<pre>public&nbsp;void&nbsp;dispose()</pre>
<div class="block">Disposes of the <code>UserInstance</code>.</div>
</li>
</ul>
<a name="initHTTP(nextapp.echo.webcontainer.Connection)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initHTTP</h4>
<pre>public&nbsp;void&nbsp;initHTTP(<a href="../../../nextapp/echo/webcontainer/Connection.html" title="class in nextapp.echo.webcontainer">Connection</a>&nbsp;conn)</pre>
<div class="block">Initializes the <code>UserInstance</code>, creating an instance
 of the target <code>ApplicationInstance</code>.
 The <code>ApplicationInstance</code> will not be initialized until
 <code>getApplicationInstance()</code> is invoked for the first time.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>conn</code> - the relevant <code>Connection</code></dd></dl>
</li>
</ul>
<a name="isInitialized()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInitialized</h4>
<pre>public&nbsp;boolean&nbsp;isInitialized()</pre>
<div class="block">Determines if the <code>UserInstance</code> has been initialized, 
 i.e., whether its <code>init()</code> method has been invoked.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>true if the <code>UserInstance</code> is initialized</dd></dl>
</li>
</ul>
<a name="initWebSocket(nextapp.echo.webcontainer.WebSocketConnection)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>initWebSocket</h4>
<pre>public&nbsp;void&nbsp;initWebSocket(<a href="../../../nextapp/echo/webcontainer/WebSocketConnection.html" title="class in nextapp.echo.webcontainer">WebSocketConnection</a>&nbsp;conn)</pre>
<div class="block">Associates a <code>WebSocketConnection</code> to the UserInstance.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>conn</code> - the relevant <code>WebSocketConnection</code></dd></dl>
</li>
</ul>
<a name="purgeRenderStates()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>purgeRenderStates</h4>
<pre>public&nbsp;void&nbsp;purgeRenderStates()</pre>
<div class="block">Removes all <code>RenderState</code>s whose components are not
 registered.</div>
</li>
</ul>
<a name="removeRenderState(nextapp.echo.app.Component)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeRenderState</h4>
<pre>public&nbsp;void&nbsp;removeRenderState(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</pre>
<div class="block">Removes the <code>RenderState</code> of the specified
 <code>Component</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>component</code> - the component</dd></dl>
</li>
</ul>
<a name="setClientConfiguration(nextapp.echo.webcontainer.ClientConfiguration)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setClientConfiguration</h4>
<pre>public&nbsp;void&nbsp;setClientConfiguration(<a href="../../../nextapp/echo/webcontainer/ClientConfiguration.html" title="class in nextapp.echo.webcontainer">ClientConfiguration</a>&nbsp;clientConfiguration)</pre>
<div class="block">Sets the <code>ClientConfiguration</code> information containing
 application-specific client behavior settings.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>clientConfiguration</code> - the new <code>ClientConfiguration</code></dd></dl>
</li>
</ul>
<a name="setRenderState(nextapp.echo.app.Component, nextapp.echo.webcontainer.RenderState)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRenderState</h4>
<pre>public&nbsp;void&nbsp;setRenderState(<a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                  <a href="../../../nextapp/echo/webcontainer/RenderState.html" title="interface in nextapp.echo.webcontainer">RenderState</a>&nbsp;renderState)</pre>
<div class="block">Sets the <code>RenderState</code> of the specified 
 <code>Component</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>component</code> - the component</dd><dd><code>renderState</code> - the render state</dd></dl>
</li>
</ul>
<a name="setTaskQueueCallbackInterval(nextapp.echo.app.TaskQueueHandle, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTaskQueueCallbackInterval</h4>
<pre>public&nbsp;void&nbsp;setTaskQueueCallbackInterval(<a href="../../../nextapp/echo/app/TaskQueueHandle.html" title="interface in nextapp.echo.app">TaskQueueHandle</a>&nbsp;taskQueue,
                                int&nbsp;ms)</pre>
<div class="block">Sets the interval between asynchronous callbacks from the client to check
 for queued tasks for a given <code>TaskQueue</code>.  If multiple 
 <code>TaskQueue</code>s are active, the smallest specified interval should
 be used.  The default interval is 500ms.
 Application access to this method should be accessed via the 
 <code>ContainerContext</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>taskQueue</code> - the <code>TaskQueue</code></dd><dd><code>ms</code> - the number of milliseconds between asynchronous client 
        callbacks</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ContainerContext.html#setTaskQueueCallbackInterval(nextapp.echo.app.TaskQueueHandle, int)"><code>ContainerContext.setTaskQueueCallbackInterval(nextapp.echo.app.TaskQueueHandle, int)</code></a></dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">See Also:</span></dt><dd><code>Object.toString()</code></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../nextapp/echo/webcontainer/SynchronizePeerFactory.html" title="class in nextapp.echo.webcontainer"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../nextapp/echo/webcontainer/UserInstanceContainer.html" title="class in nextapp.echo.webcontainer"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?nextapp/echo/webcontainer/UserInstance.html" target="_top">Frames</a></li>
<li><a href="UserInstance.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</div>
