<div>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../nextapp/echo/webcontainer/AbstractCommandSynchronizePeer.PropertyPeer.html" title="interface in nextapp.echo.webcontainer"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.EventPeer.html" title="class in nextapp.echo.webcontainer"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html" target="_top">Frames</a></li>
<li><a href="AbstractComponentSynchronizePeer.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_class_summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">nextapp.echo.webcontainer</div>
<h2 title="Class AbstractComponentSynchronizePeer" class="title">Class AbstractComponentSynchronizePeer</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>nextapp.echo.webcontainer.AbstractComponentSynchronizePeer</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="strong">AbstractComponentSynchronizePeer</span>
extends java.lang.Object
implements <a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></pre>
<div class="block">Default abstract implementation of <code>ComponentSynchronizePeer</code>.
 Provides implementations of all methods less <code>getComponentClass()</code>.
 Determines properties to render to client by querying a <code>Component</code>'s
 local style and using a <code>ComponentIntrospector</code> to determine whether
 those properties</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested_class_summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.EventPeer.html" title="class in nextapp.echo.webcontainer">AbstractComponentSynchronizePeer.EventPeer</a></strong></code>
<div class="block">Peer for synchronizing events between client and server.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#AbstractComponentSynchronizePeer()">AbstractComponentSynchronizePeer</a></strong>()</code>
<div class="block">Default constructor.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#addEvent(nextapp.echo.webcontainer.AbstractComponentSynchronizePeer.EventPeer)">addEvent</a></strong>(<a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.EventPeer.html" title="class in nextapp.echo.webcontainer">AbstractComponentSynchronizePeer.EventPeer</a>&nbsp;eventPeer)</code>
<div class="block">Adds an <code>EventPeer</code> to process client-side events.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#addOutputProperty(java.lang.String)">addOutputProperty</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Adds a non-indexed output property.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#addOutputProperty(java.lang.String, boolean)">addOutputProperty</a></strong>(java.lang.String&nbsp;propertyName,
                 boolean&nbsp;indexed)</code>
<div class="block">Adds an output property.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#addRequiredComponentClass(java.lang.Class)">addRequiredComponentClass</a></strong>(java.lang.Class&nbsp;componentClass)</code>
<div class="block">Adds a required component class that must also be initialized before this
 component can be rendered.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>abstract java.lang.Class</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getComponentClass()">getComponentClass</a></strong>()</code>
<div class="block">Returns the (most basic) supported component class.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Class</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getEventDataClass(java.lang.String)">getEventDataClass</a></strong>(java.lang.String&nbsp;eventType)</code>
<div class="block">Returns null.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Iterator</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getEventTypes(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">getEventTypes</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
             <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</code>
<div class="block">Returns an iterator of <code>String</code>s containing all event types registered using <code>addEvent()</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Class</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getInputPropertyClass(java.lang.String)">getInputPropertyClass</a></strong>(java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns null.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getOutputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int)">getOutputProperty</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                 <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                 java.lang.String&nbsp;propertyName,
                 int&nbsp;propertyIndex)</code>
<div class="block">Returns any property from the local style of the <code>Component</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Iterator</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getOutputPropertyIndices(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">getOutputPropertyIndices</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                        <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                        java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns the indices of any indexed property from the local style of the <code>Component</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getOutputPropertyMethodName(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">getOutputPropertyMethodName</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                           <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                           java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns null.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Iterator</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">getOutputPropertyNames</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                      <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</code>
<div class="block">Returns the names of all properties currently set in the component's local <code>Style</code>,
 in addition to any properties added by invoking <code>addOutputProperty()</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Iterator</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#getUpdatedOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate)">getUpdatedOutputPropertyNames</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                             <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                             <a href="../../../nextapp/echo/app/update/ServerComponentUpdate.html" title="class in nextapp.echo.app.update">ServerComponentUpdate</a>&nbsp;update)</code>
<div class="block">Returns property names that have been updated in the specified 
 <code>ServerComponentUpdate</code> that are either part of the local style
 or have been added via the <code>addOutputProperty()</code> method.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#hasListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">hasListeners</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
            <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
            java.lang.String&nbsp;eventType)</code>
<div class="block">Determines if the specified component has any listeners registered of the 
 specified event type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#hasUpdatedListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate, java.lang.String)">hasUpdatedListeners</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                   <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                   <a href="../../../nextapp/echo/app/update/ServerComponentUpdate.html" title="class in nextapp.echo.app.update">ServerComponentUpdate</a>&nbsp;update,
                   java.lang.String&nbsp;eventType)</code>
<div class="block">Determines if any server-side listeners for a specific client-side event type have been
 added or removed in the specified <code>ServerComponentUpdate</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#init(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">init</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
    <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</code>
<div class="block">Invokes the init() methods of peers of required component classes (added via
 addRequiredComponentClass()).</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#isOutputPropertyIndexed(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">isOutputPropertyIndexed</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                       <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                       java.lang.String&nbsp;propertyName)</code>
<div class="block">Determines if a local style property or additional property (added via <code>addOutputProperty()</code>)
 is indexed.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#isOutputPropertyReferenced(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">isOutputPropertyReferenced</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                          <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                          java.lang.String&nbsp;propertyName)</code>
<div class="block">Returns true for any property set as rendered-by-reference via the
 <code>setOutputPropertyReferenced()</code> method.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#processEvent(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, java.lang.Object)">processEvent</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
            <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
            java.lang.String&nbsp;eventType,
            java.lang.Object&nbsp;eventData)</code>
<div class="block">Does nothing.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#setOutputPropertyReferenced(java.lang.String, boolean)">setOutputPropertyReferenced</a></strong>(java.lang.String&nbsp;propertyName,
                           boolean&nbsp;newValue)</code>
<div class="block">Sets the rendered-by-reference state of a property.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#storeInputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int, java.lang.Object)">storeInputProperty</a></strong>(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                  <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                  java.lang.String&nbsp;propertyName,
                  int&nbsp;index,
                  java.lang.Object&nbsp;newValue)</code>
<div class="block">Does nothing.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_nextapp.echo.webcontainer.ComponentSynchronizePeer">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;nextapp.echo.webcontainer.<a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></h3>
<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getClientComponentType(boolean)">getClientComponentType</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="AbstractComponentSynchronizePeer()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>AbstractComponentSynchronizePeer</h4>
<pre>public&nbsp;AbstractComponentSynchronizePeer()</pre>
<div class="block">Default constructor.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addEvent(nextapp.echo.webcontainer.AbstractComponentSynchronizePeer.EventPeer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addEvent</h4>
<pre>public&nbsp;void&nbsp;addEvent(<a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.EventPeer.html" title="class in nextapp.echo.webcontainer">AbstractComponentSynchronizePeer.EventPeer</a>&nbsp;eventPeer)</pre>
<div class="block">Adds an <code>EventPeer</code> to process client-side events.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>eventPeer</code> - the <code>EventPeer</code> to add</dd></dl>
</li>
</ul>
<a name="addOutputProperty(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addOutputProperty</h4>
<pre>public&nbsp;void&nbsp;addOutputProperty(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Adds a non-indexed output property.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html#addOutputProperty(java.lang.String, boolean)"><code>addOutputProperty(java.lang.String, boolean)</code></a></dd></dl>
</li>
</ul>
<a name="addOutputProperty(java.lang.String, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addOutputProperty</h4>
<pre>public&nbsp;void&nbsp;addOutputProperty(java.lang.String&nbsp;propertyName,
                     boolean&nbsp;indexed)</pre>
<div class="block">Adds an output property.  
 Property names added via this method will be returned by the 
 <code>getOutputPropertyName()</code> method of this class.
 If the indexed flag is set, the <code>isOutputPropertyIndexed</code>
 method will also return true for this property name</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the property name to add</dd><dd><code>indexed</code> - a flag indicating whether the property is indexed</dd></dl>
</li>
</ul>
<a name="addRequiredComponentClass(java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addRequiredComponentClass</h4>
<pre>public&nbsp;void&nbsp;addRequiredComponentClass(java.lang.Class&nbsp;componentClass)</pre>
<div class="block">Adds a required component class that must also be initialized before this
 component can be rendered.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>componentClass</code> - </dd></dl>
</li>
</ul>
<a name="getComponentClass()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getComponentClass</h4>
<pre>public abstract&nbsp;java.lang.Class&nbsp;getComponentClass()</pre>
<div class="block">Returns the (most basic) supported component class.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getComponentClass()">getComponentClass</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>the (most basic) supported component class</dd></dl>
</li>
</ul>
<a name="getEventDataClass(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEventDataClass</h4>
<pre>public&nbsp;java.lang.Class&nbsp;getEventDataClass(java.lang.String&nbsp;eventType)</pre>
<div class="block">Returns null.  Implementations should override if they wish
 to provide event data.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getEventDataClass(java.lang.String)">getEventDataClass</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>eventType</code> - the type of the event</dd>
<dt><span class="strong">Returns:</span></dt><dd>the event data <code>Class</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getEventDataClass(java.lang.String)"><code>ComponentSynchronizePeer.getEventDataClass(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="getEventTypes(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEventTypes</h4>
<pre>public&nbsp;java.util.Iterator&nbsp;getEventTypes(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                               <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</pre>
<div class="block">Returns an iterator of <code>String</code>s containing all event types registered using <code>addEvent()</code>.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getEventTypes(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">getEventTypes</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the <code>Component</code> being rendered</dd>
<dt><span class="strong">Returns:</span></dt><dd>an <code>Iterator</code> over a collection of <code>String</code>s
         of the remote client event type names</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getEventTypes(nextapp.echo.app.util.Context, nextapp.echo.app.Component)"><code>ComponentSynchronizePeer.getEventTypes(Context, Component)</code></a></dd></dl>
</li>
</ul>
<a name="getOutputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutputProperty</h4>
<pre>public&nbsp;java.lang.Object&nbsp;getOutputProperty(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                                 <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                                 java.lang.String&nbsp;propertyName,
                                 int&nbsp;propertyIndex)</pre>
<div class="block">Returns any property from the local style of the <code>Component</code>.
 Implementations should override if they wish to support additional properties.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int)">getOutputProperty</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the <code>Component</code> being rendered</dd><dd><code>propertyName</code> - the name of the property being rendered</dd><dd><code>propertyIndex</code> - the property index (only relevant for indexed properties, -1 will
        be provided for non-indexed properties)</dd>
<dt><span class="strong">Returns:</span></dt><dd>the property value</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int)"><code>ComponentSynchronizePeer.getOutputProperty(nextapp.echo.app.util.Context,
      nextapp.echo.app.Component, java.lang.String, int)</code></a></dd></dl>
</li>
</ul>
<a name="getOutputPropertyIndices(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutputPropertyIndices</h4>
<pre>public&nbsp;java.util.Iterator&nbsp;getOutputPropertyIndices(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                                          <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                                          java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns the indices of any indexed property from the local style of the <code>Component</code>.
 Implementations should override if they wish to support additional properties.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputPropertyIndices(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">getOutputPropertyIndices</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>propertyName</code> - the property name</dd>
<dt><span class="strong">Returns:</span></dt><dd>an <code>Iterator</code> that returns the set indices in
         incrementing order as <code>Integer</code>s</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputPropertyIndices(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)"><code>ComponentSynchronizePeer.getOutputPropertyIndices(nextapp.echo.app.util.Context, 
      nextapp.echo.app.Component, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="getOutputPropertyMethodName(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutputPropertyMethodName</h4>
<pre>public&nbsp;java.lang.String&nbsp;getOutputPropertyMethodName(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                                           <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                                           java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns null.
 Implementations should override if they wish to set properties on the client by invoking 
 specific methods other than setProperty()/setIndexedProperty().</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputPropertyMethodName(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">getOutputPropertyMethodName</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>propertyName</code> - the property name</dd>
<dt><span class="strong">Returns:</span></dt><dd>the property name</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputPropertyMethodName(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)"><code>ComponentSynchronizePeer.getOutputPropertyMethodName(
      nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="getOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOutputPropertyNames</h4>
<pre>public&nbsp;java.util.Iterator&nbsp;getOutputPropertyNames(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                                        <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</pre>
<div class="block">Returns the names of all properties currently set in the component's local <code>Style</code>,
 in addition to any properties added by invoking <code>addOutputProperty()</code>.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">getOutputPropertyNames</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd>
<dt><span class="strong">Returns:</span></dt><dd>an <code>Iterator</code> of property names</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component)"><code>ComponentSynchronizePeer.getOutputPropertyNames(Context, nextapp.echo.app.Component)</code></a></dd></dl>
</li>
</ul>
<a name="getInputPropertyClass(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getInputPropertyClass</h4>
<pre>public&nbsp;java.lang.Class&nbsp;getInputPropertyClass(java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns null.  Implementations receiving input properties should override.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getInputPropertyClass(java.lang.String)">getInputPropertyClass</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the name of the property</dd>
<dt><span class="strong">Returns:</span></dt><dd>the property <code>Class</code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getInputPropertyClass(java.lang.String)"><code>ComponentSynchronizePeer.getInputPropertyClass(java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="getUpdatedOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getUpdatedOutputPropertyNames</h4>
<pre>public&nbsp;java.util.Iterator&nbsp;getUpdatedOutputPropertyNames(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                                               <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                                               <a href="../../../nextapp/echo/app/update/ServerComponentUpdate.html" title="class in nextapp.echo.app.update">ServerComponentUpdate</a>&nbsp;update)</pre>
<div class="block">Returns property names that have been updated in the specified 
 <code>ServerComponentUpdate</code> that are either part of the local style
 or have been added via the <code>addOutputProperty()</code> method.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getUpdatedOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate)">getUpdatedOutputPropertyNames</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>update</code> - the <code>ServerComponentUpdate</code> being rendered</dd>
<dt><span class="strong">Returns:</span></dt><dd>an <code>Iterator</code> of property names to update on the client</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#getUpdatedOutputPropertyNames(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate)"><code>ComponentSynchronizePeer.getUpdatedOutputPropertyNames(nextapp.echo.app.util.Context,
      nextapp.echo.app.Component,
      nextapp.echo.app.update.ServerComponentUpdate)</code></a></dd></dl>
</li>
</ul>
<a name="hasListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasListeners</h4>
<pre>public&nbsp;boolean&nbsp;hasListeners(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                   <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                   java.lang.String&nbsp;eventType)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#hasListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">ComponentSynchronizePeer</a></code></strong></div>
<div class="block">Determines if the specified component has any listeners registered of the 
 specified event type.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#hasListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">hasListeners</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>eventType</code> - the client-side event type</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if the server should be notified when the specified event type is
         fired on the client</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#hasListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)"><code>ComponentSynchronizePeer.hasListeners(nextapp.echo.app.util.Context, 
      nextapp.echo.app.Component, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="hasUpdatedListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hasUpdatedListeners</h4>
<pre>public&nbsp;boolean&nbsp;hasUpdatedListeners(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                          <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                          <a href="../../../nextapp/echo/app/update/ServerComponentUpdate.html" title="class in nextapp.echo.app.update">ServerComponentUpdate</a>&nbsp;update,
                          java.lang.String&nbsp;eventType)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#hasUpdatedListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate, java.lang.String)">ComponentSynchronizePeer</a></code></strong></div>
<div class="block">Determines if any server-side listeners for a specific client-side event type have been
 added or removed in the specified <code>ServerComponentUpdate</code>.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#hasUpdatedListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate, java.lang.String)">hasUpdatedListeners</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>update</code> - the <code>ServerComponentUpdate</code> to process</dd><dd><code>eventType</code> - the client-side event</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if any listeners of the specified event type have been added or removed
         on the server, thus potentially changing whether the client should or should
         not immediately contact the server when the specified event is fired</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#hasUpdatedListeners(nextapp.echo.app.util.Context, nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate, java.lang.String)"><code>ComponentSynchronizePeer.hasUpdatedListeners(nextapp.echo.app.util.Context, 
      nextapp.echo.app.Component, nextapp.echo.app.update.ServerComponentUpdate, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="init(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>init</h4>
<pre>public&nbsp;void&nbsp;init(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
        <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component)</pre>
<div class="block">Invokes the init() methods of peers of required component classes (added via
 addRequiredComponentClass()). 
 Implementations requiring initialization should override this method and invoke the
 super-implementation out of convention (even if they do not presently have any
 dependencies on other components).</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#init(nextapp.echo.app.util.Context, nextapp.echo.app.Component)">init</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component being rendered</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#init(nextapp.echo.app.util.Context, nextapp.echo.app.Component)"><code>ComponentSynchronizePeer.init(Context, Component)</code></a></dd></dl>
</li>
</ul>
<a name="isOutputPropertyIndexed(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isOutputPropertyIndexed</h4>
<pre>public&nbsp;boolean&nbsp;isOutputPropertyIndexed(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                              <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                              java.lang.String&nbsp;propertyName)</pre>
<div class="block">Determines if a local style property or additional property (added via <code>addOutputProperty()</code>)
 is indexed.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#isOutputPropertyIndexed(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">isOutputPropertyIndexed</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>propertyName</code> - the property name</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if the property is indexed</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#isOutputPropertyIndexed(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)"><code>ComponentSynchronizePeer.isOutputPropertyIndexed(nextapp.echo.app.util.Context, 
      nextapp.echo.app.Component, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="isOutputPropertyReferenced(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isOutputPropertyReferenced</h4>
<pre>public&nbsp;boolean&nbsp;isOutputPropertyReferenced(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                                 <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                                 java.lang.String&nbsp;propertyName)</pre>
<div class="block">Returns true for any property set as rendered-by-reference via the
 <code>setOutputPropertyReferenced()</code> method.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#isOutputPropertyReferenced(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)">isOutputPropertyReferenced</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li>ServerMessage</li>
        </ul></dd><dd><code>component</code> - the component</dd><dd><code>propertyName</code> - the property name</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if the property is rendered-by-reference</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#isOutputPropertyReferenced(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)"><code>ComponentSynchronizePeer.isOutputPropertyReferenced(
      nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="processEvent(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>processEvent</h4>
<pre>public&nbsp;void&nbsp;processEvent(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                java.lang.String&nbsp;eventType,
                java.lang.Object&nbsp;eventData)</pre>
<div class="block">Does nothing.  Implementations handling events should overwrite this method.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#processEvent(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, java.lang.Object)">processEvent</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li><code>ClientMessage</code></li>
         <li><code>ClientUpdateManager</code></li>
        </ul></dd><dd><code>component</code> - the updated <code>Component</code></dd><dd><code>eventType</code> - the type of the event</dd><dd><code>eventData</code> - arbitrary component/event-specific event-related data</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#processEvent(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, java.lang.Object)"><code>ComponentSynchronizePeer.processEvent(nextapp.echo.app.util.Context,
      nextapp.echo.app.Component, java.lang.String, java.lang.Object)</code></a></dd></dl>
</li>
</ul>
<a name="setOutputPropertyReferenced(java.lang.String, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOutputPropertyReferenced</h4>
<pre>public&nbsp;void&nbsp;setOutputPropertyReferenced(java.lang.String&nbsp;propertyName,
                               boolean&nbsp;newValue)</pre>
<div class="block">Sets the rendered-by-reference state of a property.
 <code>isOutputPropertyReferenced</code> will return true for any property set as
 referenced using this method.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>propertyName</code> - the propertyName</dd><dd><code>newValue</code> - true if the property should be rendered by reference</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#isOutputPropertyReferenced(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)"><code>ComponentSynchronizePeer.isOutputPropertyReferenced(
      nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String)</code></a></dd></dl>
</li>
</ul>
<a name="storeInputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int, java.lang.Object)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>storeInputProperty</h4>
<pre>public&nbsp;void&nbsp;storeInputProperty(<a href="../../../nextapp/echo/app/util/Context.html" title="interface in nextapp.echo.app.util">Context</a>&nbsp;context,
                      <a href="../../../nextapp/echo/app/Component.html" title="class in nextapp.echo.app">Component</a>&nbsp;component,
                      java.lang.String&nbsp;propertyName,
                      int&nbsp;index,
                      java.lang.Object&nbsp;newValue)</pre>
<div class="block">Does nothing.  Implementations that receive input from the client should override this method.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#storeInputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int, java.lang.Object)">storeInputProperty</a></code>&nbsp;in interface&nbsp;<code><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html" title="interface in nextapp.echo.webcontainer">ComponentSynchronizePeer</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - the relevant <code>Context</code>, provides 
        standard contextual information described in class description, in
        addition to the following:
        <ul>
         <li><code>ClientMessage</code></li>
         <li><code>ClientUpdateManager</code></li>
        </ul></dd><dd><code>component</code> - the updated <code>Component</code></dd><dd><code>propertyName</code> - the name of the property</dd><dd><code>index</code> - the index of the property 
        (or -1 in the typical case of a non-indexed property)</dd><dd><code>newValue</code> - the new value of the property</dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../nextapp/echo/webcontainer/ComponentSynchronizePeer.html#storeInputProperty(nextapp.echo.app.util.Context, nextapp.echo.app.Component, java.lang.String, int, java.lang.Object)"><code>ComponentSynchronizePeer.storeInputProperty(nextapp.echo.app.util.Context, 
      nextapp.echo.app.Component, java.lang.String, int, java.lang.Object)</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-all.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../nextapp/echo/webcontainer/AbstractCommandSynchronizePeer.PropertyPeer.html" title="interface in nextapp.echo.webcontainer"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.EventPeer.html" title="class in nextapp.echo.webcontainer"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?nextapp/echo/webcontainer/AbstractComponentSynchronizePeer.html" target="_top">Frames</a></li>
<li><a href="AbstractComponentSynchronizePeer.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_class_summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</div>
