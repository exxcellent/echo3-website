<div>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../nextapp/echo/app/reflect/ComponentIntrospector.html" title="class in nextapp.echo.app.reflect"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../nextapp/echo/app/reflect/IntrospectorFactory.html" title="class in nextapp.echo.app.reflect"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?nextapp/echo/app/reflect/IntrospectionUtil.html" target="_top">Frames</a></li>
<li><a href="IntrospectionUtil.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">nextapp.echo.app.reflect</div>
<h2 title="Class IntrospectionUtil" class="title">Class IntrospectionUtil</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>nextapp.echo.app.reflect.IntrospectionUtil</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">IntrospectionUtil</span>
extends java.lang.Object</pre>
<div class="block">Provides stateless utilities used for object introspection.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../nextapp/echo/app/reflect/IntrospectionUtil.html#IntrospectionUtil()">IntrospectionUtil</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/IntrospectionUtil.html#getTypeHierarchy(java.lang.String, java.lang.ClassLoader)">getTypeHierarchy</a></strong>(java.lang.String&nbsp;type,
                java.lang.ClassLoader&nbsp;classLoader)</code>
<div class="block">Returns a parent type hierarchy as an array containing the provided 
 type and all of its parent types (excluding 
 <code>java.lang.Object</code>).</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/IntrospectionUtil.html#isAssignableFrom(java.lang.String, java.lang.String, java.lang.ClassLoader)">isAssignableFrom</a></strong>(java.lang.String&nbsp;testType,
                java.lang.String&nbsp;baseType,
                java.lang.ClassLoader&nbsp;classLoader)</code>
<div class="block">Determines if the type specified by <code>testType</code> can be assigned to objects of the type
 specified by <code>baseType</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/IntrospectionUtil.html#isEventObject(java.lang.Class)">isEventObject</a></strong>(java.lang.Class&nbsp;type)</code>
<div class="block">Determines if the provided <code>Class</code> is a 
 <code>java.util.EventObject</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/IntrospectionUtil.html#isSuperType(java.lang.String, java.lang.String, java.lang.ClassLoader)">isSuperType</a></strong>(java.lang.String&nbsp;testType,
           java.lang.String&nbsp;superType,
           java.lang.ClassLoader&nbsp;classLoader)</code>
<div class="block">Determines if <code>superClass</code> is a superclass of 
 <code>testClass</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../nextapp/echo/app/reflect/IntrospectionUtil.html#removePackageFromType(java.lang.String)">removePackageFromType</a></strong>(java.lang.String&nbsp;type)</code>
<div class="block">Removes the package name from a type name.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="IntrospectionUtil()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>IntrospectionUtil</h4>
<pre>public&nbsp;IntrospectionUtil()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getTypeHierarchy(java.lang.String, java.lang.ClassLoader)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTypeHierarchy</h4>
<pre>public static&nbsp;java.lang.String[]&nbsp;getTypeHierarchy(java.lang.String&nbsp;type,
                                  java.lang.ClassLoader&nbsp;classLoader)
                                           throws java.lang.ClassNotFoundException</pre>
<div class="block">Returns a parent type hierarchy as an array containing the provided 
 type and all of its parent types (excluding 
 <code>java.lang.Object</code>).  The highest-level types appear first, 
 with the provided type at the first index.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>type</code> - the top-level type</dd><dd><code>classLoader</code> - the <code>ClassLoader</code> through which 
        introspection may be performed</dd>
<dt><span class="strong">Returns:</span></dt><dd>the type hierarchy</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ClassNotFoundException</code></dd></dl>
</li>
</ul>
<a name="isAssignableFrom(java.lang.String, java.lang.String, java.lang.ClassLoader)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAssignableFrom</h4>
<pre>public static&nbsp;boolean&nbsp;isAssignableFrom(java.lang.String&nbsp;testType,
                       java.lang.String&nbsp;baseType,
                       java.lang.ClassLoader&nbsp;classLoader)
                                throws java.lang.ClassNotFoundException</pre>
<div class="block">Determines if the type specified by <code>testType</code> can be assigned to objects of the type
 specified by <code>baseType</code>.
 This simply uses Class.isAssignableFrom after loading classes using the specified <code>ClassLoader</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>baseType</code> - the base type</dd><dd><code>testType</code> - the test type</dd><dd><code>classLoader</code> - the <code>ClassLoader</code> to use to load the classes for testing</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ClassNotFoundException</code></dd></dl>
</li>
</ul>
<a name="isEventObject(java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isEventObject</h4>
<pre>public static&nbsp;boolean&nbsp;isEventObject(java.lang.Class&nbsp;type)</pre>
<div class="block">Determines if the provided <code>Class</code> is a 
 <code>java.util.EventObject</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>type</code> - the <code>Class</code> to analyze</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if <code>type</code> type extends
         <code>java.util.EventObject</code></dd></dl>
</li>
</ul>
<a name="isSuperType(java.lang.String, java.lang.String, java.lang.ClassLoader)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isSuperType</h4>
<pre>public static&nbsp;boolean&nbsp;isSuperType(java.lang.String&nbsp;testType,
                  java.lang.String&nbsp;superType,
                  java.lang.ClassLoader&nbsp;classLoader)</pre>
<div class="block">Determines if <code>superClass</code> is a superclass of 
 <code>testClass</code>.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>testType</code> - the name class to test</dd><dd><code>superType</code> - a class name which may/may not be a superclass of
        <code>testClass</code></dd><dd><code>classLoader</code> - a <code>ClassLoader</code> to use for the analysis.</dd>
<dt><span class="strong">Returns:</span></dt><dd>true if <code>superClass</code> is a superclass of 
         <code>testClass</code></dd></dl>
</li>
</ul>
<a name="removePackageFromType(java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>removePackageFromType</h4>
<pre>public static&nbsp;java.lang.String&nbsp;removePackageFromType(java.lang.String&nbsp;type)</pre>
<div class="block">Removes the package name from a type name.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>type</code> - a fully qualified type name</dd>
<dt><span class="strong">Returns:</span></dt><dd>a relative version of the type name</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-all.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../nextapp/echo/app/reflect/ComponentIntrospector.html" title="class in nextapp.echo.app.reflect"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../nextapp/echo/app/reflect/IntrospectorFactory.html" title="class in nextapp.echo.app.reflect"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../index.html?nextapp/echo/app/reflect/IntrospectionUtil.html" target="_top">Frames</a></li>
<li><a href="IntrospectionUtil.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</div>
