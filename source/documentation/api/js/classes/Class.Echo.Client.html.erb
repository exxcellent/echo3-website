
<ul class="breadcrumb">
    <li>
    Echo
  </li>
    <li class="active">
    Client
  </li>
</ul>

<span class="badge badge-important">Abstract</span>

<dl>
<dt><strong>Class Hierarchy:</strong></dt>
<dd>
<ul>
<li>Object</li>
<li style="margin-left: 15px">
<code><a href="Class.Echo.Client">Echo.Client</a></code>
</li>
</ul>
</dd>
</dl>

<dl>
<dt><strong>Direct Known Subclasses:</strong></dt>
<dd>
<code><a href="Class.Echo.FreeClient">Echo.FreeClient</a></code></dd>
</dl>



<p><p>Abstract base class for Echo clients.</p></p>



<table class="table">
<thead>
<tr>
<th>Descendant Class Summary</th>
</tr>
</thead>
<tbody>
<tr>
<td><code><a class="PropertySummaryLink" href="Class.Echo.Client.DefaultOutdatedBrowserWarning">Echo.Client.DefaultOutdatedBrowserWarning</a></code></td>
</tr>
<tr>
<td><code><a class="PropertySummaryLink" href="Class.Echo.Client.DefaultWaitIndicator">Echo.Client.DefaultWaitIndicator</a></code></td>
</tr>
<tr>
<td><code><a class="PropertySummaryLink" href="Class.Echo.Client.OutdatedBrowserWarning">Echo.Client.OutdatedBrowserWarning</a></code></td>
</tr>
<tr>
<td><code><a class="PropertySummaryLink" href="Class.Echo.Client.Timer">Echo.Client.Timer</a></code></td>
</tr>
<tr>
<td><code><a class="PropertySummaryLink" href="Class.Echo.Client.WaitIndicator">Echo.Client.WaitIndicator</a></code></td>
</tr>
</tbody>
</table>


<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Constructor Summary</th>
</tr>
<tr>
<td>
Public
</td>
<td><code><a href="#Constructor">Echo.Client()</a></code><br/>
Creates a new Client instance.
</td>
</tr>
</table>
<br/>


<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Class Field Summary</th>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.STYLE_CRITICAL">STYLE_CRITICAL</a></code><br/>
Style property value for <code>displayError</code> indicating a critical error.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.STYLE_MESSAGE">STYLE_MESSAGE</a></code><br/>
Style property value for <code>displayError</code> indicating a message.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._activeClients">_activeClients</a></code><br/>
Global array containing all active client instances in the current browser window.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.windowId">windowId</a></code><br/>
A client-generated unique persistent identifier for the window, stored in window.
</td>
</tr>
</table>
<br/>


<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Class Method Summary</th>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._globalWindowResizeListener">_globalWindowResizeListener(e)</a></code><br/>
Global listener to respond to resizing of browser window.
</td>
</tr>
</table>
<br/>


<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Instance Field Summary</th>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.configuration">configuration</a></code><br/>
Application-configurable properties.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.designMode">designMode</a></code><br/>
Flag indicating the user interface should be rendered in design-mode, where all rendered component elements are
assigned an id.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.domainElement">domainElement</a></code><br/>
The root DOM element in which the application is contained.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.application">application</a></code><br/>
The application being managed by this client.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._lastInputRestrictionId">_lastInputRestrictionId</a></code><br/>
Id of last issued input restriction id (incremented to deliver unique identifiers).
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._inputRestrictionCount">_inputRestrictionCount</a></code><br/>
Number of currently registered input restrictions.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._inputRestrictionListeners">_inputRestrictionListeners</a></code><br/>
Echo.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._inputRescriptionMap">_inputRescriptionMap</a></code><br/>
Id (String) map containing input restrictions.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._keyFocusedComponentId">_keyFocusedComponentId</a></code><br/>
The renderId of the component which was focused during the last received <code>keyDown</code> event.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._lastKeyCode">_lastKeyCode</a></code><br/>
Last received keycode from <code>keydown</code> event.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._processKeyRef">_processKeyRef</a></code><br/>
Method reference to this.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._waitIndicatorActive">_waitIndicatorActive</a></code><br/>
Flag indicating wait indicator is active.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._outdatedBrowserWarning">_outdatedBrowserWarning</a></code><br/>
Outdated browser warning.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._processApplicationFocusRef">_processApplicationFocusRef</a></code><br/>
Method reference to this.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Field.parent">parent</a></code><br/>
The parent client.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._waitIndicator">_waitIndicator</a></code><br/>
Wait indicator.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._preWaitIndicatorDelay">_preWaitIndicatorDelay</a></code><br/>
Restriction time before raising wait indicator, in milliseconds.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._waitIndicatorRunnable">_waitIndicatorRunnable</a></code><br/>
Runnable that will trigger initialization of wait indicator.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Field._failed">_failed</a></code><br/>
Flag indicating whether a client failure has occurred (indicating there a fail error has also been displayed).
</td>
</tr>
</table>
<br/>


<table class="table">
<colgroup>
<col width="18%">
<col width="82%">
</colgroup>
<tr>
<th colspan="2">Instance Method Summary</th>
</tr>
<tr>
<td>
Public
Virtual
</td>
<td><code><a class="PropertySummaryLink" href="#Method.getResourceUrl">getResourceUrl(packageName, resourceName)</a></code><br/>
Returns the URL of a resource based on package name / 
resource name information.
</td>
</tr>
<tr>
<td>
Public
Virtual
</td>
<td><code><a class="PropertySummaryLink" href="#Method.verifyInput">verifyInput(component)</a></code><br/>
Determines if the specified component and containing application is ready to receive input.
</td>
</tr>
<tr>
<td>
Public
Virtual
</td>
<td><code><a class="PropertySummaryLink" href="#Method.dispose">dispose()</a></code><br/>
Default dispose implementation.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.addElement">addElement(element)</a></code><br/>
Registers an element (which is not a descendant of <code>domainElement</code>) that will contain rendered components.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.configure">configure(application, domainElement)</a></code><br/>
Configures/Deconfigures the client.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._isBrowserOutdated">_isBrowserOutdated()</a></code><br/>
Returns whether the detected browser is considered outdated for the current echo JS client implementation.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._showBrowserWarning">_showBrowserWarning()</a></code><br/>
Display a warning message about an outdated browser.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.createInputRestriction">createInputRestriction()</a></code><br/>
Registers a new input restriction.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.displayError">displayError(message, detail, actionText, actionFunction, style)</a></code><br/>
Displays an error message, locking the state of the client.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.exec">exec(requiredLibraries, f)</a></code><br/>
Loads required libraries and then executes a function, adding input restrictions while the libraries are being loaded.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.fail">fail(detail)</a></code><br/>
Handles an application failure.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.forceRedraw">forceRedraw()</a></code><br/>
Force various browsers to redraw the screen correctly.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.getWaitIndicator">getWaitIndicator()</a></code><br/>
Returns the configured wait indicator.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.getOutdatedBrowserWarning">getOutdatedBrowserWarning()</a></code><br/>
Returns the configured outdated browser warning.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._processApplicationFocus">_processApplicationFocus(e)</a></code><br/>
Listener for application change of component focus:
invokes focus() method on focused component's peer.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._processKey">_processKey(e)</a></code><br/>
Event handler for <code>keydown</code>, <code>keypress</code> events, and <code>keyup</code> events.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.processUpdates">processUpdates()</a></code><br/>
Processes updates to the component hierarchy.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.registerRestrictionListener">registerRestrictionListener(component, l)</a></code><br/>
Registers a listener to be notified when all input restrictions have been removed.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.hasRestrictionListener">hasRestrictionListener()</a></code><br/>

</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.removeInputRestriction">removeInputRestriction(id)</a></code><br/>
Removes an input restriction.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._setWaitVisible">_setWaitVisible(visible)</a></code><br/>
Shows/hides wait indicator.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.setWaitIndicator">setWaitIndicator(waitIndicator)</a></code><br/>
Sets the wait indicator that will be displayed when a client-server action takes longer than
a specified period of time.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.setOutdatedBrowserWarning">setOutdatedBrowserWarning()</a></code><br/>
Set the outdated browser warning that will be displayed when the client starts in browser
browser version that is considered outdated.
</td>
</tr>
<tr>
<td>
Public
</td>
<td><code><a class="PropertySummaryLink" href="#Method.removeElement">removeElement(element)</a></code><br/>
Unregisters an element (which is not a descendant of <code>domainElement</code>) that will contain rendered components.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._waitIndicatorActivate">_waitIndicatorActivate()</a></code><br/>
Activates the wait indicator.
</td>
</tr>
<tr>
<td>
Internal
</td>
<td><code><a class="PropertySummaryLink" href="#Method._windowResizeListener">_windowResizeListener(e)</a></code><br/>
Instance listener to respond to resizing of browser window.
</td>
</tr>
</table>
<br/>







<a name="Constructor"></a>

<strong>Constructor Detail</strong>

<span class="DetailPropertyName">Echo.Client()</span>

<dl>
<dd>Creates a new Client instance.  Derived classes must invoke.

</dd>
</dl>
<hr/>



<div class="Header">Class Method Detail</div>

<a name="Method._globalWindowResizeListener"></a>
<span class="DetailPropertyName">_globalWindowResizeListener</span>

<dl>
<dd>Global listener to respond to resizing of browser window.
Invokes _windowResizeListener() method on all active clients.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>e</code> 
- the DOM resize event</dd>
</dl>


</dd>
</dl>
<hr/>




<div class="Header">Instance Method Detail</div>

<a name="Method.getResourceUrl"></a>
<span class="DetailPropertyName">getResourceUrl</span>

<dl>
<dd>Returns the URL of a resource based on package name / 
resource name information.
Derived implementations should generally override this
method, and delegate to superclass if they are unable
to provide a resource for a specific URL.
Default implementation delegates to parent client
(if one is present) or otherwise returns null.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>packageName</code> 
<em>(String)</em>
- the package name in which the resource is contained</dd>
<dd>
<code>resourceName</code> 
<em>(String)</em>
- the resource name</dd>
</dl>

<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(String)</em>

the full URL
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.verifyInput"></a>
<span class="DetailPropertyName">verifyInput</span>

<dl>
<dd>Determines if the specified component and containing application is ready to receive input.
This method should be overridden by client implementations as needed, returning the value
from this implementation if the client has no other reason to disallow input.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>component</code> 
<em>(<a href="Class.Echo.Component">Echo.Component</a>)</em>
- optional parameter indicating the component to query (if omitted, only the
       application's readiness state will be investigated)</dd>
</dl>

<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(Boolean)</em>

true if the application/component are ready to receive input
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.dispose"></a>
<span class="DetailPropertyName">dispose</span>

<dl>
<dd>Default dispose implementation.
Invokes configure(null, null) to deconfigure the client.  Disables wait indicator.



</dd>
</dl>
<hr/>
<a name="Method.addElement"></a>
<span class="DetailPropertyName">addElement</span>

<dl>
<dd>Registers an element (which is not a descendant of <code>domainElement</code>) that will contain rendered components.
The client will register event listeners to this element, such that it can provide notification of client-level events
to component synchronization peers when they occur within this element and its descendants.
Any component adding an element outside of the <code>domainElement</code> should invoke this method with said element.
Any object invoking this method <strong>MUST</strong> invoke <code>removeElement</code> when the element will no longer
be used.
This method should only be invoked <strong>once per element</code>, and only on the <strong>root element</code> of any 
element hierarchy added outside of the <code>domainElement</code>.

The common use case for this method is when adding elements directly to the <code>BODY</code> element of the DOM.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>element</code> 
- the element to register</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.configure"></a>
<span class="DetailPropertyName">configure</span>

<dl>
<dd>Configures/Deconfigures the client.  This method must be invoked
with the supported application/containing domain element before
the client is used, and invoked with null values before it is
disposed (in order to clean up resources).

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>application</code> 
<em>(<a href="Class.Echo.Application">Echo.Application</a>)</em>
- the application the client will support (if configuring)
       or null (if deconfiguring)</dd>
<dd>
<code>domainElement</code> 
<em>(Element)</em>
- the DOM element into which the client will be rendered (if configuring),
       or null (if deconfiguring)</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method._isBrowserOutdated"></a>
<span class="DetailPropertyName">_isBrowserOutdated</span>

<dl>
<dd>Returns whether the detected browser is considered outdated for the current echo JS client implementation.


<dl>
<dt><strong>Returns:</strong></dt>
<dd>

true, if the browser is outdated - false, if the browser is unknown or supported.
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method._showBrowserWarning"></a>
<span class="DetailPropertyName">_showBrowserWarning</span>

<dl>
<dd>Display a warning message about an outdated browser.



</dd>
</dl>
<hr/>
<a name="Method.createInputRestriction"></a>
<span class="DetailPropertyName">createInputRestriction</span>

<dl>
<dd>Registers a new input restriction.  Input will be restricted until this and all other
input restrictions are removed.


<dl>
<dt><strong>Returns:</strong></dt>
<dd>

a handle identifier for the input restriction, which will be used to unregister
        the restriction by invoking removeInputRestriction()
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.displayError"></a>
<span class="DetailPropertyName">displayError</span>

<dl>
<dd>Displays an error message, locking the state of the client.  The client is unlocked when the user presses an
(optionally configurable) action button.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>message</code> 
<em>(String)</em>
- the message to display</dd>
<dd>
<code>detail</code> 
<em>(String)</em>
- optional details about the message (e.g., client-side exception)</dd>
<dd>
<code>actionText</code> 
<em>(String)</em>
- optional text for an action button</dd>
<dd>
<code>actionFunction</code> 
<em>(Function)</em>
- optional function to execute when action button is clicked</dd>
<dd>
<code>style</code> 
<em>(Number)</em>
- the style in which to display the error, one of the following values:
       <ul>
        <li><code>STYLE_CRITICAL</code>: used to display a critical error (the default)</li>
        <li><code>STYLE_MESSAGE</code>: used to display a message to the user</li>
       </ul></dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.exec"></a>
<span class="DetailPropertyName">exec</span>

<dl>
<dd>Loads required libraries and then executes a function, adding input restrictions while the libraries are being loaded.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>requiredLibraries</code> 
<em>(Array)</em>
- the URLs of the libraries which must be loaded before the function can execute</dd>
<dd>
<code>f</code> 
<em>(Function)</em>
- the function to execute</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.fail"></a>
<span class="DetailPropertyName">fail</span>

<dl>
<dd>Handles an application failure.
If the "StopError.URI" property of the <code>configuration</code> is set, the window is redirected to that URI.
If it is not set, an error message is displayed over the domain element, and further input is refused.  A restart
button is provided to reload the document.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>detail</code> 
<em>(String)</em>
- the error details</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.forceRedraw"></a>
<span class="DetailPropertyName">forceRedraw</span>

<dl>
<dd>Force various browsers to redraw the screen correctly.  This method is used to workaround the blank screen bug in 
Internet Explorer and the CSS positioning bug in Opera.



</dd>
</dl>
<hr/>
<a name="Method.getWaitIndicator"></a>
<span class="DetailPropertyName">getWaitIndicator</span>

<dl>
<dd>Returns the configured wait indicator.


<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(<a href="Class.Echo.Client.WaitIndicator">Echo.Client.WaitIndicator</a>)</em>

the wait indicator
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method.getOutdatedBrowserWarning"></a>
<span class="DetailPropertyName">getOutdatedBrowserWarning</span>

<dl>
<dd>Returns the configured outdated browser warning.


<dl>
<dt><strong>Returns:</strong></dt>
<dd>
<em>(<a href="Class.Echo.Client.OutdatedBrowserWarning">Echo.Client.OutdatedBrowserWarning</a>)</em>

the outdated browser warning
</dd>

</dl>

</dd>
</dl>
<hr/>
<a name="Method._processApplicationFocus"></a>
<span class="DetailPropertyName">_processApplicationFocus</span>

<dl>
<dd>Listener for application change of component focus:
invokes focus() method on focused component's peer.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>e</code> 
- the event</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method._processKey"></a>
<span class="DetailPropertyName">_processKey</span>

<dl>
<dd>Event handler for <code>keydown</code>, <code>keypress</code> events, and <code>keyup</code> events.
Notifies focsued component (and its ancestry) of event via <code>clientKeyDown</code>, <code>clientKeyPress</code>,
and <code>clientKeyUp</code> methods respectively.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>e</code> 
- the event</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.processUpdates"></a>
<span class="DetailPropertyName">processUpdates</span>

<dl>
<dd>Processes updates to the component hierarchy.
Invokes <code>Echo.Render.processUpdates()</code>.



</dd>
</dl>
<hr/>
<a name="Method.registerRestrictionListener"></a>
<span class="DetailPropertyName">registerRestrictionListener</span>

<dl>
<dd>Registers a listener to be notified when all input restrictions have been removed.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>component</code> 
<em>(<a href="Class.Echo.Component">Echo.Component</a>)</em>
- the component for which the restriction listener is being registered</dd>
<dd>
<code>l</code> 
<em>(Function)</em>
- the method to notify when all input restrictions have been cleared</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.hasRestrictionListener"></a>
<span class="DetailPropertyName">hasRestrictionListener</span>

<dl>
<dd>



</dd>
</dl>
<hr/>
<a name="Method.removeInputRestriction"></a>
<span class="DetailPropertyName">removeInputRestriction</span>

<dl>
<dd>Removes an input restriction.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>id</code> 
<em>(String)</em>
- the id (handle) of the input restriction to remove</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method._setWaitVisible"></a>
<span class="DetailPropertyName">_setWaitVisible</span>

<dl>
<dd>Shows/hides wait indicator.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>visible</code> 
<em>(Boolean)</em>
- the new visibility state of the wait indicator</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.setWaitIndicator"></a>
<span class="DetailPropertyName">setWaitIndicator</span>

<dl>
<dd>Sets the wait indicator that will be displayed when a client-server action takes longer than
a specified period of time.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>waitIndicator</code> 
<em>(<a href="Class.Echo.Client.WaitIndicator">Echo.Client.WaitIndicator</a>)</em>
- the new wait indicator</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method.setOutdatedBrowserWarning"></a>
<span class="DetailPropertyName">setOutdatedBrowserWarning</span>

<dl>
<dd>Set the outdated browser warning that will be displayed when the client starts in browser
browser version that is considered outdated.



</dd>
</dl>
<hr/>
<a name="Method.removeElement"></a>
<span class="DetailPropertyName">removeElement</span>

<dl>
<dd>Unregisters an element (which is not a descendant of <code>domainElement</code>) that will contain rendered components.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>element</code> 
- the element to unregister</dd>
</dl>


</dd>
</dl>
<hr/>
<a name="Method._waitIndicatorActivate"></a>
<span class="DetailPropertyName">_waitIndicatorActivate</span>

<dl>
<dd>Activates the wait indicator.



</dd>
</dl>
<hr/>
<a name="Method._windowResizeListener"></a>
<span class="DetailPropertyName">_windowResizeListener</span>

<dl>
<dd>Instance listener to respond to resizing of browser window.

<dl>
<dt><strong>Parameters:</strong></dt>
<dd>
<code>e</code> 
- the DOM resize event</dd>
</dl>


</dd>
</dl>
<hr/>


